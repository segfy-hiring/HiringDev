// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YoutubeApiConsumerApp.Data;

namespace YoutubeApiConsumerApp.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("YoutubeApiConsumerApp.Models.YoutubeChannelViewModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Id");

                    b.Property<string>("ChannelId")
                        .HasColumnType("longtext")
                        .HasColumnName("ChannelId");

                    b.Property<string>("ChannelTitle")
                        .HasColumnType("longtext")
                        .HasColumnName("ChannelTitle");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("Description");

                    b.Property<string>("ETag")
                        .HasColumnType("longtext")
                        .HasColumnName("ETag");

                    b.Property<string>("LiveBroadcastContent")
                        .HasColumnType("longtext")
                        .HasColumnName("LiveBroadcastContent");

                    b.Property<string>("PublishedAtRaw")
                        .HasColumnType("longtext")
                        .HasColumnName("PublishedAtRaw");

                    b.Property<string>("ThumbnailUrlVideoImage")
                        .HasColumnType("longtext")
                        .HasColumnName("ThumbnailUrlVideoImage");

                    b.Property<string>("Title")
                        .HasColumnType("longtext")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Channel");
                });

            modelBuilder.Entity("YoutubeApiConsumerApp.Models.YoutubeVideoViewModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Id");

                    b.Property<string>("ChannelId")
                        .HasColumnType("longtext")
                        .HasColumnName("ChannelId");

                    b.Property<string>("ChannelTitle")
                        .HasColumnType("longtext")
                        .HasColumnName("ChannelTitle");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("Description");

                    b.Property<string>("ETag")
                        .HasColumnType("longtext")
                        .HasColumnName("ETag");

                    b.Property<string>("LiveBroadcastContent")
                        .HasColumnType("longtext")
                        .HasColumnName("LiveBroadcastContent");

                    b.Property<string>("PublishedAtRaw")
                        .HasColumnType("longtext")
                        .HasColumnName("PublishedAtRaw");

                    b.Property<string>("ThumbnailUrlVideoImage")
                        .HasColumnType("longtext")
                        .HasColumnName("ThumbnailUrlVideoImage");

                    b.Property<string>("Title")
                        .HasColumnType("longtext")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Video");
                });
#pragma warning restore 612, 618
        }
    }
}
